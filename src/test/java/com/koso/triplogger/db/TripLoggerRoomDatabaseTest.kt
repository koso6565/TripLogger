package com.koso.triplogger.dbimport android.content.Contextimport androidx.room.Roomimport androidx.test.core.app.ApplicationProviderimport androidx.test.ext.junit.runners.AndroidJUnit4import kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.GlobalScopeimport kotlinx.coroutines.launchimport kotlinx.coroutines.newSingleThreadContextimport kotlinx.coroutines.test.resetMainimport kotlinx.coroutines.test.setMainimport org.junit.Afterimport org.junit.Beforeimport org.junit.Testimport org.junit.runner.RunWith@RunWith(AndroidJUnit4::class)class TripLoggerRoomDatabaseTest {    private lateinit var datasetDao: DataSetRawDao    private lateinit var tripDao: TripRawDao    private lateinit var db: TripLoggerRoomDatabase    private val mainThreadSurrogate = newSingleThreadContext("UI thread")    @Before    fun setUp() {        val context = ApplicationProvider.getApplicationContext<Context>()        Dispatchers.setMain(mainThreadSurrogate)        db = Room.inMemoryDatabaseBuilder(            context, TripLoggerRoomDatabase::class.java).build()        datasetDao = db.datasetDao()        tripDao = db.tripDao()    }    @After    fun tearDown() {        Dispatchers.resetMain() // reset main dispatcher to the original Main dispatcher    }    @Test    fun testDb(){        GlobalScope.launch(Dispatchers.Main) {  // Will be launched in the mainThreadSurrogate dispatcher            datasetDao.insert(DataSetRaw(132, """{"rpm":1234}"""))        }    }}