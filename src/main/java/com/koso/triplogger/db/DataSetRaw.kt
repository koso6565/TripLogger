package com.koso.triplogger.dbimport androidx.room.Entityimport androidx.room.PrimaryKeyimport com.google.gson.Gsonimport com.google.gson.reflect.TypeTokenimport com.koso.triplogger.model.DataSetimport java.lang.reflect.Type@Entity(tableName = "triplogger_dataset_table")class DataSetRaw (    @PrimaryKey    val milisecfromstart: Long,    var items: String = ""){    companion object{        /**         * Create DataSetRaw helper from dataset         */        fun createFromDataSet(dataset: DataSet): DataSetRaw{            val raw = DataSetRaw(dataset.milisecfromstart)            raw.setItemsMap(dataset.items)            return raw        }    }    fun setItemsMap(map: Map<String, Any?>){        val type: Type = object : TypeToken<Map<String, Any?>>() {}.getType()        items = Gson().toJson(map, type)    }    fun getItemsMap(): Map<String, Any>{        val type: Type = object : TypeToken<Map<String, Any?>>() {}.getType()        return Gson().fromJson(items, type)    }    fun toDataSet(): DataSet {        return DataSet(milisecfromstart, getItemsMap())    }}