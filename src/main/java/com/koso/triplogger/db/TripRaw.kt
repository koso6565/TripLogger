package com.koso.triplogger.dbimport android.content.Contextimport androidx.room.Entityimport androidx.room.PrimaryKeyimport com.koso.triplogger.io.TripFileHelperimport com.koso.triplogger.model.Tripimport com.koso.triplogger.model.TripFileReference@Entity(tableName = "triplogger_trip_table")class TripRaw(    @PrimaryKey(autoGenerate = true)    val id: Long = 0,    val starttime: Long,    val endtime: Long,    val filename: String,    val distance: Int,    var note: String,    // remote properties    var remoteid: String? = null,    var user: String? = null,    var reference: TripFileReference? = null) {    suspend fun toTrip(context: Context): Trip {        val trip = TripFileHelper.readFromLocal(context, filename)        return Trip(id, starttime, endtime, trip?.nodes ?: listOf(), distance, filename, note, remoteid, user, reference)    }    companion object {        fun fromTrip(filename: String, trip: Trip): TripRaw {            return TripRaw(                id = trip.id,                starttime = trip.starttime,                endtime = trip.endtime,                filename = filename,                distance = trip.distance,                note = trip.note,                remoteid = trip.remoteid,                user = trip.user,                reference = trip.reference            )        }    }}