package com.koso.triplogger.dbimport androidx.room.Entityimport androidx.room.PrimaryKeyimport com.koso.triplogger.model.DataSetimport com.koso.triplogger.model.Tripimport com.squareup.moshi.JsonAdapterimport com.squareup.moshi.Moshiimport com.squareup.moshi.Typesimport java.lang.reflect.Type@Entity(tableName = "triplogger_trip_table")class TripRaw(    @PrimaryKey(autoGenerate = true)    val id: Long,    val starttime: Long,    val endtime: Long,    val nodes: String) {    fun toTrip(): Trip {        val moshi = Moshi.Builder().build()        val listMyData: Type = Types.newParameterizedType(            MutableList::class.java,            DataSet::class.java        )        val adapter: JsonAdapter<List<DataSet>> = moshi.adapter(listMyData)        return Trip(id, starttime, endtime, adapter.fromJson(nodes) ?: listOf())    }    companion object {        fun fromTrip(trip: Trip): TripRaw {            val moshi = Moshi.Builder().build()            val listMyData: Type = Types.newParameterizedType(                MutableList::class.java,                DataSet::class.java            )            val adapter: JsonAdapter<List<DataSet>> = moshi.adapter(listMyData)            return TripRaw(                starttime = trip.starttime,                endtime = trip.endtime,                nodes = adapter.toJson(trip.nodes),                id = trip.id            )        }    }}